1) mongoose 
2) express and why to use it
3) ports 
4) servers
5) dependencies
6) packages
7) node js
8) document , Schema
9) model , collections
10) fs module
11) node architecture
12) Enum 
13) modules and types of modules
14) types of routes 
15) import and export      
16) module vs common js  
17) axios
18) handling cors with frontend (using proxies) and backend (using cors package)
19) npm 
20) file structure
21) creating a http server
22) url package and what are url
23) restful api and creating them (postman)
24) csr and ssr
25) middlewares 
26) different middlewares - static , cors , json , urlencoded , cookieParser
27) status codes
28) accesstoken and refresh token
29) multer and cloudinary setup
30) MVC (model , view , controller) in Nodejs
31) Authentication (statefull vs stateless)
32) jwt Authentication (stateless) using refresh and access token
33) authorization
34) cookies , they are domain specific
35) Authorization headers for send the tokens
36) package.json - it is the configuration file in root directory that is returned in JSON format  that contains meta-data about your project like name , version , scripts , dependencies
when we run npm init it gets created

37) package.lock.json - it contains the extra data about dependencies and sub dependencies like thier versions and more and it provides consistency by locking the version of the dependencies to make sure same versions are installed when used in multiple machines
38) aggreagtion pipelines